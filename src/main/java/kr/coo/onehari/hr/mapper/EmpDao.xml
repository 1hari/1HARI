<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="kr.coo.onehari.hr.dao.EmpDao">

	<!-- 사원등록 (입퇴사관리 메뉴) 김진호 2020. 1. 10 -->
	<insert id="empJoin" parameterType="kr.coo.onehari.hr.dto.EmpDto">
		INSERT INTO emp(TEAMCODE, RANKCODE, POSITIONCODE, EMPLOYMENTCODE, EMPNAME, PASSWORD)
		VALUES(#{teamCode}, #{rankCode}, #{positionCode}, #{employmentCode}, #{empName}, #{password})
	</insert>
	<!-- 사원등록 subemp Transaction -->
	<insert id="subempJoin" parameterType="kr.coo.onehari.hr.dto.EmpDto">
		INSERT INTO subemp(empnum, birth, resnum, phonenum, email, hiredate)
		VALUES(LAST_INSERT_ID(), #{birth}, #{resNum}, #{phoneNum}, #{email}, #{hireDate})
	</insert>
	
	<!-- 조직도에서 부서별 사원을 출력해주기 위해 김정하 / 2020. 1. 9 -->
	<select id="empDefaultList" resultType="kr.coo.onehari.hr.dto.EmpDto">
		SELECT E.EMPNUM, E.EMPNAME, E.TEAMCODE, R.RANKCODE, R.RANKNAME
		FROM emp AS E
		JOIN ranks AS R ON E.RANKCODE = R.RANKCODE
	</select>
	
	<!-- 조직도에서 기안자 출력해주기 위해 김정하 / 2020. 1. 10 -->
	<select id="empDefault" resultType="kr.coo.onehari.hr.dto.EmpDto">
		SELECT E.EMPNUM, E.EMPNAME, E.TEAMCODE, R.RANKCODE, R.RANKNAME
		FROM emp AS E
		JOIN ranks AS R ON E.RANKCODE = R.RANKCODE
		WHERE EMPNUM = #{empnum}
	</select>

	<!-- 사원목록 김진호 2020. 1. 7 -->
	<select id="empList" resultType="kr.coo.onehari.hr.dto.EmpDto">
	    SELECT E.EMPNUM, E.EMPNAME, T.TEAMCODE, T.TEAMNAME, R.RANKCODE, R.RANKNAME, P.POSITIONCODE, P.POSITIONNAME, EM.EMPLOYMENTCODE, EM.EMPLOYMENTNAME, S.BIRTH, S.RESNUM, S.PHONENUM, S.EMAIL, S.HIREDATE, S.LEAVEDATE
		FROM emp AS E 
		JOIN subemp AS S ON E.EMPNUM = S.EMPNUM
		JOIN team AS T ON E.TEAMCODE = T.TEAMCODE
		JOIN ranks AS R ON E.RANKCODE = R.RANKCODE	
		JOIN position AS P ON E.POSITIONCODE = P.POSITIONCODE
		JOIN employment AS EM ON E.EMPLOYMENTCODE = EM.EMPLOYMENTCODE
        ORDER BY E.EMPNUM ASC
	</select>

	<!-- 사원정보수정 화면 김진호 2020. 1. 10 -->
	<select id="empModify" resultType="kr.coo.onehari.hr.dto.EmpDto">
<!--  		SELECT E.EMPNUM, E.EMPNAME, E.TEAMCODE, T.TEAMNAME, E.RANKCODE, R.RANKNAME, E.POSITIONCODE, P.POSITIONNAME, EM.EMPLOYMENTCODE, EM.EMPLOYMENTNAME, S.BIRTH, S.PHONENUM, S.EMAIL, S.HIREDATE, S.LEAVEDATE, ER.ROLENAME -->
<!-- 		FROM emp AS E  -->
<!-- 		JOIN subemp AS S ON E.EMPNUM = S.EMPNUM -->
<!-- 		JOIN team AS T ON E.TEAMCODE = T.TEAMCODE -->
<!-- 		JOIN ranks AS R ON E.RANKCODE = R.RANKCODE -->
<!-- 		JOIN position AS P ON E.POSITIONCODE = P.POSITIONCODE -->
<!-- 		JOIN employment AS EM ON E.EMPLOYMENTCODE = EM.EMPLOYMENTCODE -->
<!-- 		JOIN emprolelist AS ER ON E.EMPNUM = ER.EMPNUM -->
<!-- 		WHERE E.EMPNUM=#{empNum} -->
 		
		SELECT @rownum := @rownum + 1 AS ROWNUM, E.EMPNUM, E.EMPNAME, E.TEAMCODE, T.TEAMNAME, E.RANKCODE, R.RANKNAME, E.POSITIONCODE, P.POSITIONNAME, EM.EMPLOYMENTCODE, EM.EMPLOYMENTNAME, S.BIRTH, S.PHONENUM, S.EMAIL, S.HIREDATE, S.LEAVEDATE, ER.ROLENAME, RO.ROLEDSCR 
		FROM EMP AS E
			JOIN subemp AS S ON E.EMPNUM = S.EMPNUM
			JOIN team AS T ON E.TEAMCODE = T.TEAMCODE
			JOIN ranks AS R ON E.RANKCODE = R.RANKCODE
			JOIN position AS P ON E.POSITIONCODE = P.POSITIONCODE
			JOIN employment AS EM ON E.EMPLOYMENTCODE = EM.EMPLOYMENTCODE
			JOIN emprolelist AS ER ON E.EMPNUM = ER.EMPNUM
			JOIN role AS RO ON ER.ROLENAME = RO.ROLENAME
		WHERE E.EMPNUM=#{empNum} AND (@rownum := 0) = 0 AND @rownum=0
	</select>
	
	<!-- 사원정보수정 변경 김진호 2020. 1. 10 -->
  	<update id="empUpdate" parameterType="kr.coo.onehari.hr.dto.EmpDto">
		UPDATE EMP
		SET TEAMCODE=#{teamCode},
			POSITIONCODE=#{positionCode},
			RANKCODE=#{rankCode},
			EMPLOYMENTCODE=#{employmentCode}
		WHERE EMPNUM=#{empNum}
	</update>
  	<update id="subempUpdate" parameterType="kr.coo.onehari.hr.dto.EmpDto">
		UPDATE SUBEMP
		SET PHONENUM=#{phoneNum},
		        <choose>
            <when test="employmentCode != '5003'">
                LEAVEDATE=NULL
            </when>
            <otherwise>
                LEAVEDATE=#{leaveDate}
            </otherwise>
        </choose>
		WHERE EMPNUM=#{empNum}
	</update>
	<insert id="insertRoleaAdmin" parameterType="kr.coo.onehari.hr.dto.Role">
		INSERT INTO emprolelist 
		VALUES (#{empNum}, 'ROLE_ADMIN')
		ON DUPLICATE KEY UPDATE rolename = 'ROLE_ADMIN'
	</insert>
	<insert id="insertRoleaPersonnel" parameterType="kr.coo.onehari.hr.dto.Role">
		INSERT INTO emprolelist 
		VALUES (#{empNum}, 'ROLE_PERSONNEL')
		ON DUPLICATE KEY UPDATE rolename = 'ROLE_PERSONNEL'
	</insert>
	<delete id="deleteRoleAdmin">
		DELETE FROM emprolelist
		WHERE empnum = #{empNum} AND rolename = 'ROLE_ADMIN'
	</delete>
	<delete id="deleteRolePersonnel">
		DELETE FROM emprolelist
		WHERE empnum = #{empNum} AND rolename = 'ROLE_PERSONNEL'
	</delete>
	
	
	
	
	
	
	
	
	
	
	
	
   	<!-- 사원 출근기능 형남 0112 -->
	<update id="insertStartWorkTA" parameterType="Integer">
		UPDATE TALIST
		SET TADATE=NOW()
		WHERE EMPNUM=#{empNum} AND TACODE=1 AND TADATE IS NULL
	</update>
	
   	<!-- 사원 출근기능(지각) 형남 0120 -->
	<update id="insertStartWorkTardyTA" parameterType="Integer">
		UPDATE TALIST
		SET TADATE=NOW(), TACODE=3 
		WHERE EMPNUM=#{empNum} AND TACODE=1 AND TADATE IS NULL
	</update>
	
	<!-- 사원 퇴근기능 형남 0112 -->
	<update id="insertEndWorkTA" parameterType="Integer">
		UPDATE TALIST SET TODAYWORK = (SELECT TIME_TO_SEC(NOW()) - (SELECT TIME_TO_SEC((SELECT TADATE FROM (SELECT TADATE FROM TALIST WHERE DATE(TADATE) = DATE(NOW()) AND EMPNUM=#{empNum} AND (TACODE=1 OR TACODE=3)) TL2)))), TADATE= NOW()WHERE EMPNUM=#{empNum} AND TACODE=2 AND TADATE IS NULL;
	</update>
	
	<!-- 오늘 퇴근기록이 있는지 조회 형남 0112-->
	<select id="todayEndWorkCheck" resultType="Integer">
		SELECT COUNT(*) FROM TALIST WHERE DATE(TADATE) = DATE(NOW()) and EMPNUM=#{empNum} AND TACODE = 2
	</select>
	
	<!-- 오늘 출근기록이 있는지 조회 형남 0112-->
	<select id="todayStartWorkCheck" resultType="Integer">
		SELECT COUNT(*) FROM TALIST WHERE DATE(TADATE) = DATE(NOW()) and EMPNUM=#{empNum} AND (TACODE = 1 OR TACODE=3)
	</select>
	
	<!-- 오늘 결근이 있는지 조회 형남 0112-->
	<select id="todayAbsentCheck" resultType="Integer">
		SELECT COUNT(*) FROM TALIST WHERE DATE(TADATE) = DATE(NOW()) and EMPNUM=#{empNum} AND TACODE=6
	</select>
	
	<!-- 총 근무일  형남 0112-->
	<select id="getTotalTA" resultType="Integer">
		SELECT COUNT(*) FROM TALIST WHERE EMPNUM = 1001 AND (TACODE=1 OR TACODE=3)
	</select>
	
    <!-- 오늘 출근시간 구하기-->
<!--     <select id="getStartWorkTime" resultType="Date"> -->
<!--         SELECT TADATE FROM TALIST WHERE EMPNUM=#{empNum} AND DATE(TADATE) = DATE(NOW()) -->
<!--     </select> -->
    
    <!-- 현재까지 근무시간-->
    <select id="getWorkTime" resultType="String">
		SELECT DATE_FORMAT(SEC_TO_TIME((SELECT TIME_TO_SEC(NOW()) - (SELECT TIME_TO_SEC((SELECT TADATE FROM TALIST AS TEMP WHERE EMPNUM=#{empNum} AND (TACODE=1 OR TACODE=3) AND DATE(tadate) = DATE(NOW())))))),"%H:%i")
    </select>
    <!-- 퇴근 후 오늘 근무시간-->
    <select id="getTodayTotalTime" resultType="String">
		SELECT DATE_FORMAT(SEC_TO_TIME((SELECT TODAYWORK FROM TALIST WHERE EMPNUM=#{empNum} AND TACODE=2 AND DATE(TADATE)=DATE(NOW()))),"%H:%i")
    </select>
    
    <!--퇴근 전 현재까지 이번주 총 근무시간-->
    <select id="getWeekTotalTime" resultType="String">
		SELECT DATE_FORMAT(SEC_TO_TIME((SELECT SUM(TODAYWORK) FROM TALIST
		WHERE YEARWEEK(TADATE) = YEARWEEK(NOW()) AND EMPNUM=#{empNum}) 
		+ TIME_TO_SEC(NOW()) 
		- TIME_TO_SEC((SELECT tadate FROM talist AS temp WHERE EMPNUM=#{empNum} AND (TACODE=1 OR TACODE=3) AND DATE(tadate) = DATE(NOW())))),"%H:%i")
    </select>
    
    <!-- 현재까지 총 근무시간-->
	<select id="getTotalTime" resultType="String">
		SELECT SEC_TO_TIME((SELECT SUM(TODAYWORK) FROM TALIST WHERE EMPNUM=#{empNum}) + TIME_TO_SEC(NOW()) 
		- TIME_TO_SEC((SELECT TADATE FROM TALIST AS TEMP WHERE EMPNUM=#{empNum} AND (TACODE=1 or tacode=3) AND DATE(TADATE) = DATE(NOW()))));
    </select>
    
    <!-- 퇴근 후 이번주 총 근무시간-->
    <select id="getWeekWorkTime" resultType="String">
      SELECT DATE_FORMAT(SEC_TO_TIME((SELECT SUM(TODAYWORK) FROM TALIST
      WHERE YEARWEEK(TADATE) = YEARWEEK(NOW()) AND EMPNUM=#{empNum})),"%H:%i")
    </select>
    
    <!-- 총 근무시간-->
   <select id="getTotalWorkTime" resultType="String">
		SELECT SEC_TO_TIME((SELECT SUM(TODAYWORK) FROM TALIST
		WHERE EMPNUM=#{empNum} AND tacode=2))
    </select>
    
    <!-- dataDate 캘린더에 필요-->
	<select id="getDataDate" resultType="String">
		SELECT DATE_FORMAT(NOW(),"%Y-%m-%d")
    </select>
    
    <!-- 이번달 출근기록 yyyy-mm-dd-->
	<select id="getStartList" resultType="String">
		SELECT DATE_FORMAT(TADATE,"%Y-%m-%d") FROM TALIST WHERE MONTH(TADATE) = MONTH(NOW()) AND TACODE=1 AND EMPNUM=#{empNum}
    </select>
    
    <!-- 이번달 출근기록 yyyy-mm-dd-->
	<select id="getTardyList" resultType="String">
		SELECT DATE_FORMAT(TADATE,"%Y-%m-%d") FROM TALIST WHERE MONTH(TADATE) = MONTH(NOW()) AND TACODE=3 AND EMPNUM=#{empNum}
    </select>
    
    <!-- 이번달 퇴근기록 yyyy-mm-dd-->
	<select id="getEndList" resultType="String">
		SELECT DATE_FORMAT(TADATE,"%Y-%m-%d") FROM TALIST WHERE MONTH(TADATE) = MONTH(NOW()) AND TACODE=2 AND EMPNUM=#{empNum}
    </select>
    
    <!-- 이번달 결근기록 yyyy-mm-dd-->
	<select id="getAbsentList" resultType="String">
		SELECT DATE_FORMAT(TADATE,"%Y-%m-%d") FROM TALIST WHERE MONTH(TADATE) = MONTH(NOW()) AND TACODE=6 AND EMPNUM=#{empNum}
    </select>

	
	    <!-- 사원 색 가져오기 출근, 지각, 결근 연차, 조퇴-->
    <select id="getWork" resultType="Integer">
       SELECT COUNT(TADATE) FROM TALIST WHERE TACODE=1 AND MONTH(TADATE) = MONTH(NOW()) AND EMPNUM=#{empNum}
    </select>
    <select id="getTardy" resultType="Integer">
       SELECT COUNT(TADATE) FROM TALIST WHERE TACODE=3 AND MONTH(TADATE) = MONTH(NOW()) AND EMPNUM=#{empNum}
    </select>
    <select id="getAbsent" resultType="Integer">
       SELECT COUNT(TADATE) FROM TALIST WHERE TACODE=6 AND MONTH(TADATE) = MONTH(NOW()) AND EMPNUM=#{empNum}
    </select>
    <select id="getAnnual" resultType="Integer">
       SELECT COUNT(TADATE) FROM TALIST WHERE TACODE=4 AND MONTH(TADATE) = MONTH(NOW()) AND EMPNUM=#{empNum}
    </select>
    <select id="getEarly" resultType="Integer">
       SELECT COUNT(TADATE) FROM TALIST WHERE TACODE=5 AND MONTH(TADATE) = MONTH(NOW()) AND EMPNUM=#{empNum}
    </select>
</mapper>


