<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="kr.coo.onehari.hr.dao.EmpDao">

	<!-- 사원등록 (입퇴사관리 메뉴) 김진호 2020. 1. 10 -->
	<insert id="empJoin" parameterType="kr.coo.onehari.hr.dto.EmpDto">
		INSERT INTO emp(TEAMCODE, RANKCODE, POSITIONCODE, EMPLOYMENTCODE, EMPNAME, PASSWORD)
		VALUES(#{teamCode}, #{rankCode}, #{positionCode}, #{employmentCode}, #{empName}, #{password})
	</insert>
	<!-- 사원등록 subemp Transaction -->
	<insert id="subempJoin" parameterType="kr.coo.onehari.hr.dto.EmpDto">
		INSERT INTO subemp(empnum, birth, resnum, phonenum, email, hiredate)
		VALUES(LAST_INSERT_ID(), #{birth}, #{resNum}, #{phoneNum}, #{email}, #{hireDate})
	</insert>
	
	<!-- 조직도에서 부서별 사원을 출력해주기 위해 김정하 / 2020. 1. 9 -->
	<select id="empDefaultList" resultType="kr.coo.onehari.hr.dto.EmpDto">
		SELECT E.EMPNUM, E.EMPNAME, E.TEAMCODE, R.RANKCODE, R.RANKNAME
		FROM emp AS E
		JOIN ranks AS R ON E.RANKCODE = R.RANKCODE
	</select>
	
	<!-- 조직도에서 기안자 출력해주기 위해 김정하 / 2020. 1. 10 -->
	<select id="empDefault" resultType="kr.coo.onehari.hr.dto.EmpDto">
		SELECT E.EMPNUM, E.EMPNAME, E.TEAMCODE, R.RANKCODE, R.RANKNAME
		FROM emp AS E
		JOIN ranks AS R ON E.RANKCODE = R.RANKCODE
		WHERE EMPNUM = #{empnum}
	</select>

	<!-- 사원목록 김진호 2020. 1. 7 -->
	<select id="empList" resultType="kr.coo.onehari.hr.dto.EmpDto">
	    SELECT E.EMPNUM, E.EMPNAME, T.TEAMCODE, T.TEAMNAME, R.RANKCODE, R.RANKNAME, P.POSITIONCODE, P.POSITIONNAME, EM.EMPLOYMENTCODE, EM.EMPLOYMENTNAME, S.BIRTH, S.RESNUM, S.PHONENUM, S.EMAIL, S.HIREDATE, S.LEAVEDATE
		FROM emp AS E 
		JOIN subemp AS S ON E.EMPNUM = S.EMPNUM
		JOIN team AS T ON E.TEAMCODE = T.TEAMCODE
		JOIN ranks AS R ON E.RANKCODE = R.RANKCODE	
		JOIN position AS P ON E.POSITIONCODE = P.POSITIONCODE
		JOIN employment AS EM ON E.EMPLOYMENTCODE = EM.EMPLOYMENTCODE
        ORDER BY E.EMPNUM ASC
	</select>
	


	<!-- 사원정보수정 화면 김진호 2020. 1. 10 -->
	<select id="empModify" resultType="kr.coo.onehari.hr.dto.EmpDto">
		SELECT @rownum := @rownum + 1 AS ROWNUM, E.EMPNUM, E.EMPNAME, E.PASSWORD, E.TEAMCODE, T.TEAMNAME, E.RANKCODE, R.RANKNAME, E.POSITIONCODE, P.POSITIONNAME, EM.EMPLOYMENTCODE, EM.EMPLOYMENTNAME, S.BIRTH, S.PHONENUM, S.EMAIL, S.HIREDATE, S.LEAVEDATE, ER.ROLENAME, RO.ROLEDSCR, S.RESNUM 
		FROM EMP AS E
			JOIN subemp AS S ON E.EMPNUM = S.EMPNUM
			JOIN team AS T ON E.TEAMCODE = T.TEAMCODE
			JOIN ranks AS R ON E.RANKCODE = R.RANKCODE
			JOIN position AS P ON E.POSITIONCODE = P.POSITIONCODE
			JOIN employment AS EM ON E.EMPLOYMENTCODE = EM.EMPLOYMENTCODE
			JOIN emprolelist AS ER ON E.EMPNUM = ER.EMPNUM
			JOIN role AS RO ON ER.ROLENAME = RO.ROLENAME
		WHERE E.EMPNUM=#{empNum} AND (@rownum := 0) = 0 AND @rownum=0
	</select>
	
	<!-- 사원정보수정 변경 김진호 2020. 1. 10 -->
  	<update id="empUpdate" parameterType="kr.coo.onehari.hr.dto.EmpDto">
		UPDATE EMP
		SET TEAMCODE=#{teamCode},
			POSITIONCODE=#{positionCode},
			RANKCODE=#{rankCode},
			EMPLOYMENTCODE=#{employmentCode}
		WHERE EMPNUM=#{empNum}
	</update>
  	<update id="subempUpdate" parameterType="kr.coo.onehari.hr.dto.EmpDto">
		UPDATE SUBEMP
		SET PHONENUM=#{phoneNum},
		        <choose>
            <when test="employmentCode != '5003'">
                LEAVEDATE=NULL
            </when>
            <otherwise>
                LEAVEDATE=#{leaveDate}
            </otherwise>
        </choose>
		WHERE EMPNUM=#{empNum}
	</update>
	<insert id="insertRoleaAdmin" parameterType="kr.coo.onehari.hr.dto.Role">
		INSERT INTO emprolelist 
		VALUES (#{empNum}, 'ROLE_ADMIN')
		ON DUPLICATE KEY UPDATE rolename = 'ROLE_ADMIN'
	</insert>
	<insert id="insertRoleaPersonnel" parameterType="kr.coo.onehari.hr.dto.Role">
		INSERT INTO emprolelist 
		VALUES (#{empNum}, 'ROLE_PERSONNEL')
		ON DUPLICATE KEY UPDATE rolename = 'ROLE_PERSONNEL'
	</insert>
	<delete id="deleteRoleAdmin">
		DELETE FROM emprolelist
		WHERE empnum = #{empNum} AND rolename = 'ROLE_ADMIN'
	</delete>
	<delete id="deleteRolePersonnel">
		DELETE FROM emprolelist
		WHERE empnum = #{empNum} AND rolename = 'ROLE_PERSONNEL'
	</delete>
	

    
        
    <!-- 연차정보 등록 김정하 2020. 1. 27 -->
    <insert id="insertAnnUse">
    	<selectKey resultType="int" keyProperty="signNum" order="BEFORE">
    		SELECT MAX(SIGNNUM) FROM sign;
    	</selectKey>
    	
    	INSERT INTO annuselist (SIGNNUM, EMPNUM, STARTDATE, ENDDATE, USEANN)
    	VALUES(
    		#{signNum},
    		#{empNum},
    		#{startDate},
    		#{endDate},
    		#{useAnn}    	
    	)
    </insert>
    
    <!-- 연차정보 확정(승인) 김정하 2020. 1. 27 -->
    <update id="updateAnnUse">
    	UPDATE annuselist SET ISSIGN='1' WHERE SIGNNUM = #{signNum};
    </update>
    
    <!-- 연차정보 List 김정하 2020. 1. 28 -->
    <select id="getAnnUseList" resultType="kr.coo.onehari.hr.dto.AnnUse">
    	SELECT SIGNNUM, STARTDATE, ENDDATE, USEANN, ISSIGN
		FROM annuselist
		WHERE EMPNUM = #{empNum}
		ORDER BY STARTDATE DESC
    </select>
    
    <!-- 연차정보 김정하 2020. 1. 28 -->
    <select id="getEmpAnn" resultType="kr.coo.onehari.hr.dto.EmpAnn">
    	SELECT e.EMPNUM, e.TOTALANN, e.USEANN, s.HIREDATE
		FROM empannlist e JOIN subemp s
        		          ON e.EMPNUM = s.EMPNUM
		WHERE e.EMPNUM = #{empNum}
    </select>
    

    
    <!-- 사원리스트 page 김정하 / 2020. 1. 29 -->
    <select id="empListPage" parameterType="hashmap" resultType="kr.coo.onehari.hr.dto.EmpDto">
	    SELECT E.EMPNUM, E.EMPNAME, T.TEAMCODE, T.TEAMNAME, R.RANKCODE, R.RANKNAME, P.POSITIONCODE, P.POSITIONNAME, EM.EMPLOYMENTCODE, EM.EMPLOYMENTNAME, S.BIRTH, S.RESNUM, S.PHONENUM, S.EMAIL, S.HIREDATE, S.LEAVEDATE
		FROM emp AS E 
			JOIN subemp AS S ON E.EMPNUM = S.EMPNUM
			JOIN team AS T ON E.TEAMCODE = T.TEAMCODE
			JOIN ranks AS R ON E.RANKCODE = R.RANKCODE	
			JOIN position AS P ON E.POSITIONCODE = P.POSITIONCODE
			JOIN employment AS EM ON E.EMPLOYMENTCODE = EM.EMPLOYMENTCODE
		<where>
			<if test="empNum != null">
				OR E.EMPNUM like concat('%',#{searchKey},'%') 
			</if>
			<if test="empName != null">
				OR E.EMPNAME like concat('%',#{searchKey},'%') 
			</if>
			<if test="teamName != null">
				OR T.TEAMNAME like concat('%',#{searchKey},'%') 
			</if>
			<if test="phoneNum != null">
				OR S.PHONENUM like concat('%',#{searchKey},'%') 
			</if>
		</where>
        ORDER BY E.EMPNUM ASC
        LIMIT ${pg}
		<if test="cp != '0'">
			OFFSET ${cp}
		</if>
	</select>
	
	<!-- 사원리스트 page처리 김정하 / 2020. 1. 29 -->
	<select id="empListPageCount" parameterType="hashmap" resultType="int">
		SELECT COUNT(E.EMPNUM)
		FROM emp AS E 
			JOIN subemp AS S ON E.EMPNUM = S.EMPNUM
			JOIN team AS T ON E.TEAMCODE = T.TEAMCODE
		<where>
			<if test="empNum != null">
				OR E.EMPNUM like concat('%',#{searchKey},'%') 
			</if>
			<if test="empName != null">
				OR E.EMPNAME like concat('%',#{searchKey},'%') 
			</if>
			<if test="teamName != null">
				OR T.TEAMNAME like concat('%',#{searchKey},'%') 
			</if>
			<if test="phoneNum != null">
				OR S.PHONENUM like concat('%',#{searchKey},'%') 
			</if>
		</where>
	</select>
    

	
	<!-- 연차목록 1건조회 김정하 2020. 1. 30 -->
    <select id="getAnnUse" resultType="kr.coo.onehari.hr.dto.AnnUse">
    	SELECT EMPNUM, STARTDATE, ENDDATE, USEANN
		FROM annuselist
		WHERE SIGNNUM = #{signNum}
    </select>
    
    <!-- 연차정보 근태목록에 추가 김정하 2020. 1. 30 -->
    <insert id="setAnnUseTaList" parameterType="hashmap">
    	insert into talist(EMPNUM, TACODE, TADATE, SCHEDULEDATE)
		VALUES 
		<foreach collection="list" item="item" separator=", ">
			(#{empNum}, 1, 0, #{item}), (#{empNum}, 4, 0, #{item})
		</foreach>
    </insert>
    	<!-- 형남 0127 CEO 정보 가져오기 -->
    <select id="getCEO" resultType="kr.coo.onehari.hr.dto.EmpDto">
        SELECT * FROM EMP E JOIN RANKS R
        ON E.RANKCODE = R.RANKCODE
        WHERE E.RANKCODE=3006
    </select>
</mapper>
